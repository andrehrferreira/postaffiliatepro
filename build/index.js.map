{"version":3,"sources":["../src/index.js"],"names":["PostAffiliatePro","urlServer","urlLogin","username","password","cookies","session","axios","get","requestSession","headers","split","replace","bodyFormData","FormData","__getSession","append","JSON","stringify","method","url","data","getBuffer","getHeaders","login","join","__authentication","S","response","result","length","rows","fields","returnData","returnFields","key","tmpItem","keyHeader","push","__getAPI","__parseResult","offset","limit","command","campaigns","categoryid","coupons","datestart","dateend","status","report","campaignid","deeplink","value"],"mappings":"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","sourcesContent":["import \"@babel/polyfill/noConflict\";\r\n\r\nimport axios from \"axios\";\r\nimport FormData from \"form-data\";\r\n\r\nexport default class PostAffiliatePro{\r\n    constructor(urlServer, urlLogin, username, password){\r\n        this.urlServer = urlServer;\r\n        this.urlLogin = urlLogin;\r\n        this.username = username;\r\n        this.password = password;\r\n        this.cookies = null;\r\n        this.session = null;\r\n    }\r\n\r\n    async __getSession(){\r\n        let requestSession = await axios.get(this.urlLogin);\r\n        this.session = requestSession.headers[\"set-cookie\"][0].split(\";\")[0].replace(\"A=\", \"\");\r\n        return this.session;\r\n    }\r\n\r\n    async __authentication(){\r\n        let bodyFormData = new FormData();\r\n\r\n        if(!this.session)\r\n            await this.__getSession();\r\n\r\n        bodyFormData.append(\"D\", JSON.stringify({\r\n            \"C\": \"Gpf_Rpc_Server\",\r\n            \"M\": \"run\",\r\n            \"requests\": [{\r\n                \"C\": \"Gpf_Auth_Service\",\r\n                \"M\": \"authenticate\",\r\n                \"fields\": [[\"name\",\"value\"], [\"username\",this.username], [\"password\",this.password], [\"rememberMe\",\"Y\"],[\"language\",\"pt-BR\"]]\r\n            }],\r\n            \"S\": this.session\r\n        }));\r\n\r\n        let login = await axios({\r\n            method: \"POST\",\r\n            url: this.urlServer,\r\n            data: bodyFormData.getBuffer(),\r\n            headers: { \r\n                ...bodyFormData.getHeaders()\r\n            }\r\n        });\r\n\r\n        this.cookies = login.headers[\"set-cookie\"].join(\";\");\r\n        return true;\r\n    }\r\n\r\n    async __getAPI(data){\r\n        if(!this.cookies)\r\n            await this.__authentication();\r\n\r\n        data.S = this.session;\r\n\r\n        let bodyFormData = new FormData();\r\n        bodyFormData.append(\"D\", JSON.stringify(data));\r\n\r\n        let response = await axios({\r\n            method: \"POST\",\r\n            url: this.urlServer,\r\n            data: bodyFormData.getBuffer(),\r\n            headers: { \r\n                \"Cookie\": `A=${this.session}; ${this.cookies}`,\r\n                ...bodyFormData.getHeaders()\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    }\r\n\r\n    async __parseResult(result){\r\n        if(result.length > 0){\r\n            let rows = result[0].rows;\r\n            let fields = (result[0].length > 0) ? result[0][0].fields : null;\r\n            let returnData = [], returnFields = [], headers = [];\r\n\r\n            for(let key in rows){\r\n                if(key == 0) headers = rows[0];\r\n                else {\r\n                    let tmpItem = {};\r\n\r\n                    for(let keyHeader in headers)\r\n                        tmpItem[headers[keyHeader]] = rows[key][keyHeader];\r\n \r\n                    returnData.push(tmpItem);\r\n                }\r\n            }\r\n\r\n            if(fields){\r\n                for(let key in fields){\r\n                    if(key == 0) headers = fields[0];\r\n                    else {\r\n                        let tmpItem = {};\r\n    \r\n                        for(let keyHeader in headers)\r\n                            tmpItem[headers[keyHeader]] = fields[key][keyHeader];\r\n     \r\n                        returnFields.push(tmpItem);\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                data: returnData,\r\n                fields: returnFields\r\n            };\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async command(data){\r\n        let result = await this.__getAPI(data);\r\n\r\n        if(result)\r\n            result = this.__parseResult(result);\r\n\r\n        return result;\r\n    }\r\n\r\n    async campaigns(offset, limit){\r\n        let campaigns = await this.command({\r\n            \"C\": \"Gpf_Rpc_Server\",\r\n            \"M\": \"run\",\r\n            \"requests\": [{\r\n                \"C\": \"Pap_Affiliates_Promo_CampaignsGrid\",\r\n                \"M\": \"getRows\",\r\n                \"offset\": offset, \r\n                \"limit\": limit,\r\n                \"columns\": [[\"id\"],[\"name\"],[\"description\"],[\"logourl\"],[\"banners\"],[\"longdescriptionexists\"],[\"commissionsdetails\"],[\"rstatus\"],[\"commissionsexist\"]]\r\n            }]\r\n        });\r\n\r\n        return campaigns.data;\r\n    }\r\n\r\n    async promo(categoryid, offset, limit){\r\n        let coupons = await this.command({\r\n            \"C\": \"Gpf_Rpc_Server\",\r\n            \"M\": \"run\",\r\n            \"requests\": [{\r\n                \"C\": \"Pap_Affiliates_Promo_BannersGrid\",\r\n                \"M\": \"getRows\",\r\n                \"offset\": offset, \r\n                \"limit\": limit,\r\n                \"filters\": [[\"type\",\"IN\",\"A,E,I,T\"],[\"categoryid\",\"=\",categoryid]],\r\n                \"columns\": [[\"id\"],[\"destinationurl\"],[\"name\"],[\"campaignid\"],[\"campaignname\"],[\"bannercode\"],[\"bannerdirectlinkcode\"],[\"bannerpreview\"],[\"rtype\"],[\"displaystats\"],[\"channelcode\"],[\"campaigndetails\"]]\r\n            }]\r\n        });\r\n\r\n        return coupons.data;\r\n    }\r\n\r\n    async report(datestart, dateend, status){\r\n        let report = await this.command({\r\n            \"C\": \"Gpf_Rpc_Server\",\r\n            \"M\": \"run\",\r\n            \"requests\": [{\r\n                \"C\": \"Pap_Affiliates_Reports_TrendsReport\",\r\n                \"M\": \"loadData\",\r\n                \"isInitRequest\": \"N\",\r\n                \"filterType\": \"trends_report\",                                        \r\n                \"filters\":[[\"datetime\",\"D>=\",datestart],[\"datetime\",\"D<=\",dateend],[\"rpc\",\"=\",\"Y\"],[\"groupBy\",\"=\",\"day\"],[\"dataType1\",\"=\",\"saleCount\"],[\"dataType2\",\"=\",\"saleCommission\"],[\"rstatus\",\"IN\",status]]\r\n            }],\r\n        });\r\n\r\n        return report.data;\r\n    }\r\n\r\n    async deeplink(url, campaignid){\r\n        let deeplink = await this.command({\r\n            \"C\": \"Gpf_Rpc_Server\",\r\n            \"M\": \"run\",\r\n            \"requests\": [{\r\n                \"C\": \"Gpf_Rpc_Server\",\r\n                \"M\": \"run\",\r\n                \"requests\": [{\r\n                    \"C\": \"Pap_Affiliates_Promo_DynamicLink\",\r\n                    \"M\": \"getDeeplinkCode\",                             \r\n                    \"fields\":[[\"name\",\"value\"],[\"desturl\",url],[\"campaignId\",campaignid]]\r\n                }],\r\n            }],\r\n        });\r\n\r\n        return deeplink.fields[2].value;\r\n    }\r\n}"],"file":"index.js"}